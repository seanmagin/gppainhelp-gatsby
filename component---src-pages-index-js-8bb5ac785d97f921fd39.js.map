{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Bio.js"],"names":["BlogIndex","render","siteTitle","get","this","siteDescription","posts","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","props","title","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","lang","meta","name","content","_components_Bio__WEBPACK_IMPORTED_MODULE_4__","map","_ref","node","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","data","query","finalData","Fragment","children","Consumer","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","header","_this$props","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","display","src","dataJson","profilePic","alt","width","height","bio","_public_static_d_3896568745_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-8bb5ac785d97f921fd39.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: 'none',\n  },\n})\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n            to={'/'}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: 'Montserrat, sans-serif',\n            marginTop: 0,\n            marginBottom: rhythm(-1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n            to={'/'}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nimport { rhythm } from '../utils/typography'\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query BioDataQuery {\n            dataJson {\n              name\n              profilePic\n              bio\n            }\n          }\n        `}\n        render={data => (\n          <div\n            style={{\n              display: 'flex',\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <img\n              src={data.dataJson.profilePic}\n              alt={data.dataJson.name}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                width: rhythm(2),\n                height: rhythm(2),\n              }}\n            />\n            <div dangerouslySetInnerHTML={{ __html: data.dataJson.bio }} />\n          </div>\n        )}\n      />\n    )\n  }\n}\n\nexport default Bio\n"],"sourceRoot":""}